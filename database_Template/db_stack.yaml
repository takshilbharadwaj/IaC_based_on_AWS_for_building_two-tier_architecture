Resources:
  # Security Group for RDS Instance
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access from web server
      VpcId: !ImportValue VPC-Network-Stack-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          # Allow access from the web server security group
          SourceSecurityGroupId: !ImportValue Webserver-Setup-Stack-WebServerSecurityGroupId

  # RDS Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: RDS-instance
      AllocatedStorage: 10
      DBInstanceClass: db.t3.micro
      Engine: mysql
      MasterUsername: '{{resolve:secretsmanager:RDS-Master-Creds:SecretString:username}}'
      MasterUserPassword: '{{resolve:secretsmanager:RDS-Master-Creds:SecretString:password}}'
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      PubliclyAccessible: false
      MultiAZ: true

  # RDS Subnet Group
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet groups for RDS instance
      SubnetIds:
        - !ImportValue VPC-Network-Stack-PrivateSubnetId1
        - !ImportValue VPC-Network-Stack-PrivateSubnetId2

Outputs:
  RDSInstanceId:
    Value: !Ref RDSInstance
    Export:
      Name: !Sub ${AWS::StackName}-RDSInstanceId
