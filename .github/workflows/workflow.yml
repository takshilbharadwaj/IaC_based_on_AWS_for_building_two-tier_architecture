name: Deploy CloudFormation templates for two-tier architecture

on:
  push:
    branches:
      - update_workflow_templates_path_issue
  workflow_dispatch:

# Performing separate deployments for each CFN template to minimize chance of error.
jobs:
  deploy-vpc:
    runs-on: ubuntu-latest
    # Only run the job if the vpc_stack.yaml file is modified.
    if: contains(github.event.commits[*].modified, 'network_Template/vpc_stack.yaml')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy VPC stack
        run: |
          aws cloudformation deploy \
            --stack-name VPC-Network-Stack \
            --template-file network_Template/vpc_stack.yaml \
            --debug

  deploy-webserver:
    runs-on: ubuntu-latest
    # Only run the job if the vpc_stack.yaml file is modified.
    if: contains(github.event.commits[0].modified, 'webserver_Template/webserver_stack.yaml')
    needs: deploy-vpc
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy Web Server stack
        run: |
          aws cloudformation deploy \
            --stack-name Webserver-Setup-Stack \
            --template-file webserver_Template/webserver_stack.yaml \
            --debug

  deploy-db:
    runs-on: ubuntu-latest
    if: contains(github.event.commits[0].modified, 'database_Template/db_stack.yaml')
    needs: deploy-webserver
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy Database stack
        run: |
          aws cloudformation deploy \
            --stack-name Database-Setup-Stack \
            --template-file database_Template/db_stack.yaml \
            --debug
