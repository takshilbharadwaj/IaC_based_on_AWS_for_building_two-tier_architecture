name: Deploy CloudFormation templates for two-tier architecture

on:
  push:
    branches:
      - update_workflow_templates_path_issue
  workflow_dispatch:

# Performing separate deployments for each CFN template to minimize chance of error.
jobs:
  deploy-vpc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Create Change Set for VPC stack
        run: |
          aws cloudformation create-change-set \
            --stack-name VPC-Network-Stack \
            --template-file network_Template/vpc_stack.yaml \
            --change-set-name VPC-ChangeSet \
            --change-set-type CREATE

      - name: Wait for Change Set to be created
        run: aws cloudformation wait change-set-create-complete --stack-name VPC-Network-Stack --change-set-name VPC-ChangeSet

      - name: Describe Change Set for VPC stack
        run: aws cloudformation describe-change-set --stack-name VPC-Network-Stack --change-set-name VPC-ChangeSet

      - name: Execute Change Set for VPC stack
        run: aws cloudformation execute-change-set --stack-name VPC-Network-Stack --change-set-name VPC-ChangeSet

  deploy-webserver:
    runs-on: ubuntu-latest
    needs: deploy-vpc
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Create Change Set for Web Server stack
        run: |
          aws cloudformation create-change-set \
            --stack-name Webserver-Setup-Stack \
            --template-file webserver_Template/webserver_stack.yaml \
            --change-set-name WebServer-ChangeSet \
            --change-set-type CREATE

      - name: Wait for Change Set to be created
        run: aws cloudformation wait change-set-create-complete --stack-name Webserver-Setup-Stack --change-set-name WebServer-ChangeSet

      - name: Describe Change Set for Web Server stack
        run: aws cloudformation describe-change-set --stack-name Webserver-Setup-Stack --change-set-name WebServer-ChangeSet

      - name: Execute Change Set for Web Server stack
        run: aws cloudformation execute-change-set --stack-name Webserver-Setup-Stack --change-set-name WebServer-ChangeSet

  deploy-db:
    runs-on: ubuntu-latest
    needs: deploy-webserver
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Create Change Set for Database stack
        run: |
          aws cloudformation create-change-set \
            --stack-name Database-Setup-Stack \
            --template-file database_Template/db_stack.yaml \
            --change-set-name Database-ChangeSet \
            --change-set-type CREATE

      - name: Wait for Change Set to be created
        run: aws cloudformation wait change-set-create-complete --stack-name Database-Setup-Stack --change-set-name Database-ChangeSet

      - name: Describe Change Set for Database stack
        run: aws cloudformation describe-change-set --stack-name Database-Setup-Stack --change-set-name Database-ChangeSet

      - name: Execute Change Set for Database stack
        run: aws cloudformation execute-change-set --stack-name Database-Setup-Stack --change-set-name Database-ChangeSet